<script>
var old_html = '';


function grabShiftList(event_id) {
    url = "{{ path('shift_index', {'access': 'ajax' }) }}" 
        + "?event=" + event_id;
    $.get(url, function( data ) {
        $( "#shiftList" ).html(data);
    }).done(function() {
        $( ".jobList" ).each(function() {
            $(this).hide();
        });
/* Not really working. Having odd TRs in the table 
        $( "#shiftTable" ).dataTable({
            "order": [[ 1, "asc" ]],
            "paging": false,
            "searching": false
            });
*/
    });
    return false;
}
function submitNewShiftForm(event_id) {
    $.ajax({
        beforeSend: function(req) {
          req.setRequestHeader("Accept", "application/json");
        },
        type: "POST",
        url: "{{ path('shift_new', { 'access': 'ajax' }) }}",
        data: $( "#newShiftForm" ).serialize(),
        dataType: "text",
        async: true,
      }).done( function( cont, textStatus, xhr ) {
            if (xhr.status == 201) {
                $( "#newShift" ).html(old_html);
                grabShiftList(event_id);
            } else {
                $( "#newShift" ).html(xhr.responseText);
            }
      }).fail(function(xhr, status, error) {
            errmsg = "Message sending failed\n";
            errmsg = errmsg + xhr.responseText + "\n";
            alert(errmsg);
    });
    return false;
}

function grabNewShiftForm(event_id = false) {
    old_html = $( "#newShift" ).html();
    url = "{{ path('shift_new', { 'access': 'ajax' }) }}";
    if (event_id) {
        url = url + "?event=" + event_id;
    }
    $.get(url, function( data ) {
        $( "#newShift" ).html(data);
        /* My JS-fu is bad. I'm quite sure I should be able to set the
         * submitNewShiftForm function directly, but then it woule be called
         * immediately.  Aka, I have to read up on this..
         */
        $( "#crewcallbundle_shift_event").prev().hide();
        $( "#crewcallbundle_shift_event").hide();
        $( "#newShiftForm" ).submit(function( event ) {
            event.preventDefault();
            submitNewShiftForm(event_id);
        });
    });
    return false;
}

function submitEditShiftForm(shift_id) {
    /* Looks odd?
     * The option is to make the controller action not use the ID in
     * the URL. I may change to that later. */
    orgurl = "{{ path('shift_edit', { 'access': 'ajax' }) }}";
    url = orgurl.replace("0", shift_id);
    $.ajax({
        beforeSend: function(req) {
          req.setRequestHeader("Accept", "application/json");
        },
        type: "POST",
        url: url,
        data: $( "#editShiftForm" ).serialize(),
        dataType: "text",
        async: true,
      }).done( function( cont, textStatus, xhr ) {
        $( "#editShift" ).html("");
        // Cheating with twig.
        grabShiftList({{ event.id }});
      }).fail(function(xhr, status, error) {
            errmsg = "Message sending failed\n";
            errmsg = errmsg + xhr.responseText + "\n";
            alert(errmsg);
    });
    return false;
}

function grabEditShiftForm(shift_id) {
    orgurl = "{{ path('shift_edit', { 'access': 'ajax' }) }}";
    url = orgurl.replace("0", shift_id);
    $.get(url, function( data ) {
        $( "#editShift" ).html(data);
        $( "#editShiftForm" ).submit(function( event ) {
            event.preventDefault();
            submitEditShiftForm(shift_id);
        });
    });
    return false;
}

jQuery(document).ready(function() {
    grabShiftList({{ event.id }});
    return false;
});

</script>
<div id="shiftList">
</div>

<div id="newShift">
<a href="#" onClick="grabNewShiftForm({{event.id}});">Add shift</a>
</div>

<div id="editShift">
</div>
